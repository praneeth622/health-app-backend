version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: health-app-postgres
    environment:
      POSTGRES_DB: health_app
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - health-app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  # NestJS Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: health-app-backend
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      PORT: 3000
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: password
      DATABASE_NAME: health_app
      DATABASE_SYNCHRONIZE: "true"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - health-app-network
    restart: unless-stopped

  # pgAdmin (Optional - for database management)
  pgadmin:
    image: dpage/pgadmin4
    container_name: health-app-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@healthapp.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - health-app-network

volumes:
  postgres_data:

networks:
  health-app-network:
    driver: bridge